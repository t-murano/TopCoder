import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class WritingWords:
    def write(self, word):
        return sum(ord(char) - ord('A') + 1 for char in word)

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, hasAnswer, p1):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("\"") + str(p0) + str("\""))
	print(str("]"))
	obj = WritingWords()
	startTime = time.clock()
	answer = obj.write(p0)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		res = answer == p1
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
		if (hasAnswer):
			print(str("Desired answer:"))
			print(str("\t") + str(p1))
		
		print(str("Your answer:"))
		print(str("\t") + str(answer))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = "A"
p1 = 1
all_right = (disabled or KawigiEdit_RunTest(0, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = "ABC"
p1 = 6
all_right = (disabled or KawigiEdit_RunTest(1, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = "VAMOSGIMNASIA"
p1 = 143
all_right = (disabled or KawigiEdit_RunTest(2, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = "TOPCODER"
p1 = 96
all_right = (disabled or KawigiEdit_RunTest(3, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = "SINGLEROUNDMATCH"
p1 = 183
all_right = (disabled or KawigiEdit_RunTest(4, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 5 -----
disabled = False
p0 = "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
p1 = 1300
all_right = (disabled or KawigiEdit_RunTest(5, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# PROBLEM STATEMENT
# Fox Ciel wants to type a word on her old cell phone. The cell phone has only one button. The letter A is typed by tapping the button once, B by tapping it twice in a row, and so on, in alphabetical order. Thus, the last letter Z is typed by tapping the button 26 times without a pause.
# 
# You are given a string word. Compute and return the answer to the following question: How many times will Ciel tap the button while typing this word?
# 
# DEFINITION
# Class:WritingWords
# Method:write
# Parameters:string
# Returns:integer
# Method signature:def write(self, word):
# 
# 
# NOTES
# -While typing a word, Ciel has to make a short pause after typing each letter, so that the phone can tell when one letter ends and another letter begins. These pauses do not matter in this problem.
# 
# 
# CONSTRAINTS
# -word will contain between 1 and 50 characters, inclusive.
# -Each character in word will be an uppercase English letter ('A'-'Z').
# 
# 
# EXAMPLES
# 
# 0)
# "A"
# 
# Returns: 1
# 
# One tap types the letter A.
# 
# 1)
# "ABC"
# 
# Returns: 6
# 
# To type ABC, Ciel will do the following:
# 
# Tap the button once to type A.
# Tap the button twice to type B.
# Tap the button three times to type C.
# 
# The total number of taps is 1+2+3 = 6.
# 
# 2)
# "VAMOSGIMNASIA"
# 
# Returns: 143
# 
# 
# 
# 3)
# "TOPCODER"
# 
# Returns: 96
# 
# 
# 
# 4)
# "SINGLEROUNDMATCH"
# 
# Returns: 183
# 
# 
# 
# 5)
# "ZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZZ"
# 
# Returns: 1300
# 
# 
# 
# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
