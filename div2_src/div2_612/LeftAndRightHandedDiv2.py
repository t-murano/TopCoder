import math,string,itertools,fractions,heapq,collections,re,array,bisect,random

class LeftAndRightHandedDiv2:
    def count(self, S):
    	collision = 0
        for l, r in zip(S[:-1], S[1:]):
        	if r == 'L' and l == 'R': collision += 1
        return collision

# BEGIN KAWIGIEDIT TESTING
# Generated by KawigiEdit-pf 2.3.0
import sys
import time
def KawigiEdit_RunTest(testNum, p0, hasAnswer, p1):
	sys.stdout.write(str("Test ") + str(testNum) + str(": [") + str("\"") + str(p0) + str("\""))
	print(str("]"))
	obj = LeftAndRightHandedDiv2()
	startTime = time.clock()
	answer = obj.count(p0)
	endTime = time.clock()
	res = True
	print(str("Time: ") + str((endTime - startTime)) + str(" seconds"))
	if (hasAnswer):
		res = answer == p1
	
	if (not res):
		print(str("DOESN'T MATCH!!!!"))
		if (hasAnswer):
			print(str("Desired answer:"))
			print(str("\t") + str(p1))
		
		print(str("Your answer:"))
		print(str("\t") + str(answer))
	elif ((endTime - startTime) >= 2):
		print(str("FAIL the timeout"))
		res = False
	elif (hasAnswer):
		print(str("Match :-)"))
	else:
		print(str("OK, but is it right?"))
	
	print(str(""))
	return res

all_right = True
tests_disabled = False


# ----- test 0 -----
disabled = False
p0 = "L"
p1 = 0
all_right = (disabled or KawigiEdit_RunTest(0, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 1 -----
disabled = False
p0 = "RRR"
p1 = 0
all_right = (disabled or KawigiEdit_RunTest(1, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 2 -----
disabled = False
p0 = "LRLRLR"
p1 = 2
all_right = (disabled or KawigiEdit_RunTest(2, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 3 -----
disabled = False
p0 = "LLLRRR"
p1 = 0
all_right = (disabled or KawigiEdit_RunTest(3, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

# ----- test 4 -----
disabled = False
p0 = "RLRLRL"
p1 = 3
all_right = (disabled or KawigiEdit_RunTest(4, p0, True, p1) ) and all_right
tests_disabled = tests_disabled or disabled
# ------------------

if (all_right):
	if (tests_disabled):
		print(str("You're a stud (but some test cases were disabled)!"))
	else:
		print(str("You're a stud (at least on given cases)!"))
	
else:
	print(str("Some of the test cases had errors."))

# PROBLEM STATEMENT
# Some students are seated in a row next to each other.
# Each of them is either left-handed or right-handed.
# You are given a string S that describes the row of students.
# Each character of S is either 'L' or 'R', representing a left-handed or a right-handed person, respectively.
# The characters describe the row from the left to the right: for all i, the person described by character i+1 sits to the right of the person described by character i.
# 
# The students are trying to write down lecture notes.
# Whenever a left-handed person sits immediately to the right of a right-handed person, their elbows collide when they both try to write at the same time.
# Compute and return the number of elbow collisions, assuming that all students in the row attempt to write at the same time.
# 
# DEFINITION
# Class:LeftAndRightHandedDiv2
# Method:count
# Parameters:string
# Returns:integer
# Method signature:def count(self, S):
# 
# 
# CONSTRAINTS
# -S will contain between 1 and 50 characters, inclusive.
# -Each character of S will be either 'L' or 'R'.
# 
# 
# EXAMPLES
# 
# 0)
# "L"
# 
# Returns: 0
# 
# There's only one person in the row so there are no collisions.
# 
# 1)
# "RRR"
# 
# Returns: 0
# 
# Everybody is right-handed so there are no collisions.
# 
# 2)
# "LRLRLR"
# 
# Returns: 2
# 
# There will be two collisions: one of them between the second and the third person from the left (described by S[1] and S[2]) and the other between the fourth and the fifth person.
# 
# 3)
# "LLLRRR"
# 
# Returns: 0
# 
# 
# 
# 4)
# "RLRLRL"
# 
# Returns: 3
# 
# 
# 
# END KAWIGIEDIT TESTING
#Powered by KawigiEdit-pf 2.3.0!
